{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:29:48.488Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T00:29:48.490Z"}
{"level":"info","message":"(request, response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response, 400, 'name not found');\n    return;\n  }\n  if(!request.body.says){\n    sendStatus(response, 400, 'says not found');\n    return;\n  }\n  // Here, I can create my cat since all test pass\n  let cat = new Cat(request.body.name,request.body.says);\n  cats.push(cat);\n  sendJSON(response, 200, cat);\n}","timestamp":"2017-12-07T00:29:48.491Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:29:48.503Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:07:02.239Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:07:02.240Z"}
{"level":"info","message":"(request, response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response, 400, 'name not found');\n    return;\n  }\n  if(!request.body.says){\n    sendStatus(response, 400, 'says not found');\n    return;\n  }\n  // Here, I can create my cat since all test pass\n  let cat = new Cat(request.body.name,request.body.says);\n  cats.push(cat);\n  sendJSON(response, 200, cat);\n}","timestamp":"2017-12-07T01:07:02.240Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:07:02.253Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:07:51.279Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:07:51.282Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:07:51.282Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/Andrew/cf/401/labs/08-09-vanilla-rest-server/lab-andrew/lib/router.js:50:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:07:51.282Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:10:17.814Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:10:17.815Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:10:17.815Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/Andrew/cf/401/labs/08-09-vanilla-rest-server/lab-andrew/lib/router.js:50:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:10:17.815Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:12:29.987Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:12:29.987Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:12:29.987Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/Andrew/cf/401/labs/08-09-vanilla-rest-server/lab-andrew/lib/router.js:50:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:12:29.987Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:18:26.252Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:18:26.252Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on (/Users/Andrew/cf/401/labs/08-09-vanilla-rest-server/lab-andrew/lib/request-parser.js:24:44)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T01:18:26.252Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:19:25.582Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:19:25.583Z"}
{"level":"info","message":"(request, response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response, 400, 'name not found');\n    return;\n  }\n  if(!request.body.says){\n    sendStatus(response, 400, 'says not found');\n    return;\n  }\n  // Here, I can create my cat since all test pass\n  let cat = new Cat(request.body.name,request.body.says);\n  cats.push(cat);\n  sendJSON(response, 200, cat);\n}","timestamp":"2017-12-07T01:19:25.583Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T01:19:25.584Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:20:44.353Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:20:44.353Z"}
{"level":"info","message":"(request, response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response, 400, 'name not found');\n    return;\n  }\n  if(!request.body.says){\n    sendStatus(response, 400, 'says not found');\n    return;\n  }\n  // Here, I can create my cat since all test pass\n  let cat = new Cat(request.body.name,request.body.says);\n  cats.push(cat);\n  sendJSON(response, 200, cat);\n}","timestamp":"2017-12-07T01:20:44.353Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:20:44.354Z"}
{"id":"d8dc4220-daec-11e7-8880-2b5c4b614fbb","birthday":"2017-12-07T01:20:44.354Z","name":"kitty","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:20:44.354Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:23:44.966Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:23:44.966Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:23:44.966Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/Andrew/cf/401/labs/08-09-vanilla-rest-server/lab-andrew/lib/router.js:50:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:23:44.966Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:29:50.966Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:29:50.966Z"}
{"level":"info","message":"(request, response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response, 400, 'name not found');\n    return;\n  }\n  if(!request.body.says){\n    sendStatus(response, 400, 'says not found');\n    return;\n  }\n  // Here, I can create my cat since all test pass\n  let cat = new Cat(request.body.name,request.body.says);\n  cats.push(cat);\n  sendJSON(response, 200, cat);\n}","timestamp":"2017-12-07T01:29:50.966Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:29:50.966Z"}
{"id":"1eaaa160-daee-11e7-8880-2b5c4b614fbb","birthday":"2017-12-07T01:29:50.966Z","name":"kitty","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:29:50.966Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:30:25.058Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:30:25.060Z"}
{"level":"info","message":"(request, response) => {\n\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response, 400, 'name not found');\n    return;\n  }\n  if(!request.body.says){\n    sendStatus(response, 400, 'says not found');\n    return;\n  }\n  let cat = new Cat(request.body.name, request.body.says);\n  cats.push(cat);\n  sendJSON(response, 200, cat);\n  console.log(cats);\n}","timestamp":"2017-12-07T01:30:25.060Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:30:25.069Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:30:28.652Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:30:28.655Z"}
{"level":"info","message":"(request, response) => {\n\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response, 400, 'name not found');\n    return;\n  }\n  if(!request.body.says){\n    sendStatus(response, 400, 'says not found');\n    return;\n  }\n  let cat = new Cat(request.body.name, request.body.says);\n  cats.push(cat);\n  sendJSON(response, 200, cat);\n  console.log(cats);\n}","timestamp":"2017-12-07T01:30:28.655Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:30:28.656Z"}
{"id":"3521ab00-daee-11e7-b20b-39bea56dabc2","birthday":"2017-12-07T01:30:28.656Z","name":"kitty","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:30:28.656Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:30:58.756Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:30:58.757Z"}
{"level":"info","message":"(request, response) => {\n\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response, 400, 'name not found');\n    return;\n  }\n  if(!request.body.says){\n    sendStatus(response, 400, 'says not found');\n    return;\n  }\n  let cat = new Cat(request.body.name, request.body.says);\n  cats.push(cat);\n  sendJSON(response, 200, cat);\n  console.log(cats);\n}","timestamp":"2017-12-07T01:30:58.757Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:30:58.757Z"}
{"id":"4712b750-daee-11e7-b20b-39bea56dabc2","birthday":"2017-12-07T01:30:58.757Z","name":"totoro","says":"raawr","level":"info","message":"","timestamp":"2017-12-07T01:30:58.757Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:32:02.586Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:32:02.589Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:32:02.590Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:32:07.707Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:32:07.707Z"}
{"level":"info","message":"(request, response) => {\n\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response, 400, 'name not found');\n    return;\n  }\n  if(!request.body.says){\n    sendStatus(response, 400, 'says not found');\n    return;\n  }\n  let cat = new Cat(request.body.name, request.body.says);\n  cats.push(cat);\n  sendJSON(response, 200, cat);\n  console.log(cats);\n}","timestamp":"2017-12-07T01:32:07.707Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T01:32:07.707Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T01:32:07.714Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:32:58.766Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:32:58.767Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:32:58.767Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:32:58.856Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:32:58.885Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:32:58.887Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:32:58.887Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T01:32:58.887Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:34:00.935Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:34:00.936Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:34:00.937Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:34:01.025Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:34:01.054Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:34:01.057Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:34:01.057Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T01:34:01.057Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:34:51.465Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:34:51.466Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:34:51.466Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:34:51.546Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:34:51.572Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:34:51.574Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:34:51.574Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:34:51.574Z"}
{"id":"d1d7c560-daee-11e7-a376-df72dd55fe6c","birthday":"2017-12-07T01:34:51.574Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:34:51.575Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:35:54.545Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:35:54.546Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:35:54.546Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:35:54.629Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:35:54.655Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:35:54.657Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:35:54.657Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:35:54.658Z"}
{"id":"f771a020-daee-11e7-b64b-afe51d391da0","birthday":"2017-12-07T01:35:54.658Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:35:54.658Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:40:37.284Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:40:37.286Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:40:37.286Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:40:37.369Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:40:37.401Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:40:37.403Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:40:37.403Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:40:37.405Z"}
{"id":"9ff93dc0-daef-11e7-9be1-071b11c974c0","birthday":"2017-12-07T01:40:37.404Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:40:37.405Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:40:37.425Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:40:37.425Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:40:37.425Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/Andrew/cf/401/labs/08-09-vanilla-rest-server/lab-andrew/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:40:37.426Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:42:51.427Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:42:51.428Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:42:51.428Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:42:51.428Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:42:51.428Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats);\n}","timestamp":"2017-12-07T01:42:51.428Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:42:51.526Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:42:51.615Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:42:51.618Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:42:51.618Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:42:51.619Z"}
{"id":"eff8d330-daef-11e7-9fde-170629b1b058","birthday":"2017-12-07T01:42:51.619Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:42:51.619Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:42:51.638Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:42:51.639Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats);\n}","timestamp":"2017-12-07T01:42:51.639Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:42:51.639Z"}
[{"id":"eff8d330-daef-11e7-9fde-170629b1b058","birthday":"2017-12-07T01:42:51.619Z","name":"cats","says":"meow"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:43:12.950Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:43:12.951Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:43:12.951Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:43:12.951Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:43:12.951Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:43:12.951Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:43:13.039Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:43:13.126Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:43:13.129Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:43:13.129Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:43:13.130Z"}
{"id":"fccb24a0-daef-11e7-ad29-eb39c0b675dc","birthday":"2017-12-07T01:43:13.130Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:43:13.130Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:43:13.155Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:43:13.156Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log(cats);\n}","timestamp":"2017-12-07T01:43:13.156Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:43:13.156Z"}
[{"id":"fccb24a0-daef-11e7-ad29-eb39c0b675dc","birthday":"2017-12-07T01:43:13.130Z","name":"cats","says":"meow"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:43:39.231Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:43:39.232Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:43:39.232Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:43:39.233Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:43:39.233Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats);\n}","timestamp":"2017-12-07T01:43:39.233Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:43:39.341Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:43:39.430Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:43:39.432Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:43:39.432Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:43:39.432Z"}
{"id":"0c788280-daf0-11e7-a948-e36d3e8114d5","birthday":"2017-12-07T01:43:39.432Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:43:39.432Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:43:39.450Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:43:39.451Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats);\n}","timestamp":"2017-12-07T01:43:39.451Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:43:39.451Z"}
[{"id":"0c788280-daf0-11e7-a948-e36d3e8114d5","birthday":"2017-12-07T01:43:39.432Z","name":"cats","says":"meow"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:44:24.636Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:44:24.638Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:44:24.638Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:44:24.638Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:44:24.638Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', response);\n}","timestamp":"2017-12-07T01:44:24.638Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:44:24.738Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:44:24.826Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:44:24.829Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:44:24.829Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:44:24.830Z"}
{"id":"2787b1e0-daf0-11e7-ab1f-932c3cc291dd","birthday":"2017-12-07T01:44:24.830Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:44:24.830Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:44:24.850Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:44:24.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', response);\n}","timestamp":"2017-12-07T01:44:24.850Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:44:24.851Z"}
[{"id":"2787b1e0-daf0-11e7-ab1f-932c3cc291dd","birthday":"2017-12-07T01:44:24.830Z","name":"cats","says":"meow"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:45:29.857Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:45:29.858Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:45:29.858Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:45:29.858Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:45:29.858Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', sendJSON(response, 200, cats));\n}","timestamp":"2017-12-07T01:45:29.858Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:45:29.946Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:45:30.036Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:45:30.038Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:45:30.038Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:45:30.039Z"}
{"id":"4e65cc70-daf0-11e7-8dcf-2dcad17a7c26","birthday":"2017-12-07T01:45:30.039Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:45:30.039Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:45:30.060Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:45:30.061Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', sendJSON(response, 200, cats));\n}","timestamp":"2017-12-07T01:45:30.061Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:45:30.061Z"}
[{"id":"4e65cc70-daf0-11e7-8dcf-2dcad17a7c26","birthday":"2017-12-07T01:45:30.039Z","name":"cats","says":"meow"}]
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:45:30.062Z"}
[{"id":"4e65cc70-daf0-11e7-8dcf-2dcad17a7c26","birthday":"2017-12-07T01:45:30.039Z","name":"cats","says":"meow"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:46:06.098Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:46:06.099Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:46:06.100Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:46:06.100Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:46:06.100Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats[0]); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats[0]);\n}","timestamp":"2017-12-07T01:46:06.100Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:46:06.196Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:46:06.281Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:46:06.283Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:46:06.284Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:46:06.284Z"}
{"id":"640058c0-daf0-11e7-b40a-b78a79e9eb6f","birthday":"2017-12-07T01:46:06.284Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:46:06.285Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:46:06.310Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:46:06.311Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats[0]); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats[0]);\n}","timestamp":"2017-12-07T01:46:06.311Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:46:06.311Z"}
{"id":"640058c0-daf0-11e7-b40a-b78a79e9eb6f","birthday":"2017-12-07T01:46:06.284Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:46:06.312Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:48:02.630Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:48:02.632Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:48:02.632Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:48:02.632Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:48:02.632Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats[0]); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats[0]);\n}","timestamp":"2017-12-07T01:48:02.632Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:48:02.712Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:48:02.741Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:48:02.743Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:48:02.743Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:48:02.744Z"}
{"id":"a96abb80-daf0-11e7-bb1c-93535703694e","birthday":"2017-12-07T01:48:02.744Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:48:02.744Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:48:02.763Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:48:02.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats[0]); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats[0]);\n}","timestamp":"2017-12-07T01:48:02.764Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:48:02.764Z"}
{"id":"a96abb80-daf0-11e7-bb1c-93535703694e","birthday":"2017-12-07T01:48:02.744Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:48:02.764Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:48:45.605Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:48:45.606Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:48:45.606Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:48:45.607Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:48:45.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats[0]); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats[0]);\n}","timestamp":"2017-12-07T01:48:45.607Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:48:45.692Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:48:45.718Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:48:45.721Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:48:45.721Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:48:45.721Z"}
{"id":"c3088090-daf0-11e7-a91f-b18c9816ca4b","birthday":"2017-12-07T01:48:45.721Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:48:45.722Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:48:45.742Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:48:45.743Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats[0]); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats[0]);\n}","timestamp":"2017-12-07T01:48:45.743Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:48:45.743Z"}
{"id":"c3088090-daf0-11e7-a91f-b18c9816ca4b","birthday":"2017-12-07T01:48:45.721Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:48:45.743Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:50:16.059Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:50:16.060Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:50:16.060Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:50:16.060Z"}
{"level":"info","message":"/api/cats","timestamp":"2017-12-07T01:50:16.060Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats);\n}","timestamp":"2017-12-07T01:50:16.061Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:50:16.150Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:50:16.179Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:50:16.181Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[2]++;cov_2l9axpiqwa.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_2l9axpiqwa.b[0][0]++;cov_2l9axpiqwa.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[0][1]++;}cov_2l9axpiqwa.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_2l9axpiqwa.b[1][0]++;cov_2l9axpiqwa.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[1][1]++;}cov_2l9axpiqwa.s[22]++;\n  if (!request.body.says) {/* istanbul ignore next */cov_2l9axpiqwa.b[2][0]++;cov_2l9axpiqwa.s[23]++;\n    sendStatus(response, 400, 'says not found'); /* istanbul ignore next */cov_2l9axpiqwa.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2l9axpiqwa.b[2][1]++;}\n  let cat = /* istanbul ignore next */(cov_2l9axpiqwa.s[25]++, new Cat(request.body.name, request.body.says)); /* istanbul ignore next */cov_2l9axpiqwa.s[26]++;\n  cats.push(cat); /* istanbul ignore next */cov_2l9axpiqwa.s[27]++;\n  sendJSON(response, 200, cat); /* istanbul ignore next */cov_2l9axpiqwa.s[28]++;\n  console.log('post', cats);\n}","timestamp":"2017-12-07T01:50:16.181Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:50:16.182Z"}
{"id":"f8f39a50-daf0-11e7-9b79-3780a8a9b268","birthday":"2017-12-07T01:50:16.182Z","name":"cats","says":"meow","level":"info","message":"","timestamp":"2017-12-07T01:50:16.182Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:50:16.201Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:50:16.201Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2l9axpiqwa.f[3]++;cov_2l9axpiqwa.s[30]++;\n  sendJSON(response, 200, cats); /* istanbul ignore next */cov_2l9axpiqwa.s[31]++;\n  console.log('get', cats);\n}","timestamp":"2017-12-07T01:50:16.201Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:50:16.201Z"}
[{"id":"f8f39a50-daf0-11e7-9b79-3780a8a9b268","birthday":"2017-12-07T01:50:16.182Z","name":"cats","says":"meow"}]
